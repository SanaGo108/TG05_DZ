import asyncio
import requests
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from config import TOKEN, DADATA_API_KEY

bot = Bot(token=TOKEN)
dp = Dispatcher()

# URL –¥–ª—è API Dadata
DADATA_URL = "https://suggestions.dadata.ru/suggestions/api/4_1/rs/findById/party"

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
HEADERS = {
    "Content-Type": "application/json",
    "Authorization": f"Token {DADATA_API_KEY}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ò–ù–ù
def get_organization_info(inn):
    data = {
        "query": inn
    }

    try:
        response = requests.post(DADATA_URL, json=data, headers=HEADERS)
        response_data = response.json()

        if response.status_code == 200 and response_data.get("suggestions"):
            org_info = response_data["suggestions"][0]["data"]
            name = org_info.get("name", {}).get("full_with_opf", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            address = org_info.get("address", {}).get("value", "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω")
            status = org_info.get("state", {}).get("status", "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω")

            return (
                f"üìÑ –ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n"
                f"üìç –ê–¥—Ä–µ—Å: {address}\n"
                f"üîç –°—Ç–∞—Ç—É—Å: {status}"
            )
        else:
            return "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ò–ù–ù –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Dadata API."

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ò–ù–ù –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –∏ —è –Ω–∞–π–¥—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–π.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ò–ù–ù –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message()
async def handle_inn_query(message: types.Message):
    inn = message.text.strip()
    if not inn.isdigit() or len(inn) not in [10, 12]:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ò–ù–ù (10 –∏–ª–∏ 12 —Ü–∏—Ñ—Ä).")
        return

    info = get_organization_info(inn)
    await message.answer(info)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    asyncio.run(main())
